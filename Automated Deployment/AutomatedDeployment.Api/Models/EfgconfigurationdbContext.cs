// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace AutomatedDeployment.Api
{
    public partial class EfgconfigurationdbContext : DbContext
    {
        public EfgconfigurationdbContext()
        {
        }

        public EfgconfigurationdbContext(DbContextOptions<EfgconfigurationdbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<Configuration> Configurations { get; set; }
        public virtual DbSet<Hub> Hubs { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=automated-deployment.database.windows.net;Initial Catalog=EfgConfigurationDB;Persist Security Info=True;User ID=EFgTeam;Password=Efg123456789");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Application>(entity =>
            {
                entity.Property(e => e.AppID).ValueGeneratedNever();
            });

            modelBuilder.Entity<Configuration>(entity =>
            {
                entity.HasKey(e => new { e.HubID, e.AppID });

                entity.HasOne(d => d.App)
                    .WithMany(p => p.Configurations)
                    .HasForeignKey(d => d.AppID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Configurations_Applications");

                entity.HasOne(d => d.Hub)
                    .WithMany(p => p.Configurations)
                    .HasForeignKey(d => d.HubID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Configurations_Hubs");
            });

            modelBuilder.Entity<Hub>(entity =>
            {
                entity.Property(e => e.HubID).ValueGeneratedNever();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}